name: CI/CD

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    if: github.event.workflow_run.conclusion == 'success' && contains(github.event.workflow_run.head_branch, 'main')
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and Push Docker image
        run: |
          DOCKER_IMAGE_NAME="trucco10/demo-devops-python"
          DOCKER_IMAGE_TAG="${{ github.run_number }}"
          DOCKER_IMAGE_FULLNAME="$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG"
          docker build -t $DOCKER_IMAGE_FULLNAME .
          docker push $DOCKER_IMAGE_FULLNAME
    
      - name: Install kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Configure Kubectl for Minikube
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          echo "$KUBECONFIG" > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml

      - name: Update Kubernetes deployment
        run: |
          kubectl set image deployment/demo-devops-python-deployment demo-devops-python-container=${{ secrets.DOCKERHUB_USERNAME }}/demo-devops-python:${{ github.run_number }} -n app-test
